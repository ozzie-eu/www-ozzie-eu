<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on Ozzie.eu</title>
    <link>http://localhost:44149/tags/json/</link>
    <description>Recent content in JSON on Ozzie.eu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 29 Mar 2021 16:30:47 +0100</lastBuildDate>
    <atom:link href="http://localhost:44149/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automatic class creation for unmarshalling JSON</title>
      <link>http://localhost:44149/post/json-automatic-class-unmarshall/</link>
      <pubDate>Mon, 29 Mar 2021 16:30:47 +0100</pubDate>
      <guid>http://localhost:44149/post/json-automatic-class-unmarshall/</guid>
      <description>If you&amp;rsquo;re working with JSON, say for REST web services, and you don&amp;rsquo;t have the class to unmarshal the response, Visual Studio can automatically generate the class for you:&#xA;Open your Visual Studio Project and create a class file. Delete the contents: Copy the JSON text string you will need to unmarshall onto the clipboard. Take this example from the JSON Placeholder mock API: { &amp;#34;userId&amp;#34;: 1, &amp;#34;id&amp;#34;: 1, &amp;#34;title&amp;#34;: &amp;#34;delectus aut autem&amp;#34;, &amp;#34;completed&amp;#34;: false } Go to Edit &amp;gt; Paste Special &amp;gt; Paste JSON as Classes: The result is a class named &amp;ldquo;Rootobject&amp;rdquo; that you can use to unmarshall the information on your code.</description>
    </item>
  </channel>
</rss>
